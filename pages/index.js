import Head from 'next/head'
import styles from '../styles/Home.module.css'
import Banner from "../components/banner";
import Card from "../components/card";
import {fetchCoffeeStores} from "../lib/coffee-stores";
import useTrackLocation from "../hooks/useTrackLocation";
import {useContext, useEffect, useState} from "react";
import {ACTION_TYPES, StoreContext} from "./_app";

export async function getStaticProps(context) {

  const coffeeStores = await fetchCoffeeStores()

  return {
    props: {
      coffeeStores
    }
  }
}

export default function Home(props) {
  const { handleTrackLocation, locationErrorMsg, isFindingLocation } =
    useTrackLocation();

  const [coffeeStoresError, setCoffeeStoresError] = useState('')
  const { state, dispatch } = useContext(StoreContext);
  const { coffeeStores, latLong } = state


  const handleOnBannerBtnClick = () => {
    handleTrackLocation();
  };

  useEffect( () => {
    const fetchData = async () => {
      try {
      if (latLong) {
        const fetchedCoffeeStores = await fetchCoffeeStores(latLong)
        dispatch({type: ACTION_TYPES.SET_COFFEE_STORES, payload: {coffeeStores: fetchedCoffeeStores}})
      }
    } catch(error) {
        console.log(error)
        setCoffeeStoresError(error.message)
      }
    }
    fetchData()
  }, [latLong])

  return (
    <div className={styles.container}>
      <Head>
        <title>Coffee Connoisseur</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Banner buttonText={isFindingLocation ? "Locating..." : "View stores nearby"} handleOnClick={handleOnBannerBtnClick} />
        {locationErrorMsg && <p>Something went wrong: {locationErrorMsg}</p>}
        {coffeeStoresError && <p>Something went wrong: {coffeeStoresError}</p>}

        {coffeeStores.length > 0 && (
          <div className={styles.sectionWrapper}>
            <h2 className={styles.heading2}>Stores near me</h2>
            <div className={styles.cardLayout}>
              {coffeeStores.map(coffeeStore => (
                <Card
                  key={coffeeStore.id}
                  name={coffeeStore.name}
                  href={`coffee-store/${coffeeStore.fsq_id}`}
                  imgUrl={coffeeStore.imgUrl || 'https://images.unsplash.com/photo-1504753793650-d4a2b783c15e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2000&q=80'}
                  className={styles.card}
                />
              ))
              }
            </div>
          </div>
        )}

        {props.coffeeStores.length > 0 && (
          <div className={styles.sectionWrapper}>
            <h2 className={styles.heading2}>Toronto stores</h2>
            <div className={styles.cardLayout}>
              {props.coffeeStores.map(coffeeStore => (
                  <Card
                    key={coffeeStore.id}
                    name={coffeeStore.name}
                    href={`coffee-store/${coffeeStore.fsq_id}`}
                    imgUrl={coffeeStore.imgUrl || 'https://images.unsplash.com/photo-1504753793650-d4a2b783c15e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2000&q=80'}
                    className={styles.card}
                  />
                ))
              }
            </div>
          </div>
        )}
      </main>
    </div>
  )
}
